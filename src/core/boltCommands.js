const inquirer = require('inquirer');
const fs = require('fs');
const path = require('path');
const yaml = require('yaml');
const { boltLogSuccess, boltLogError } = require('../utils/boltLogger');

const boltInitialize = async (args) => {
  try {
    const questions = [
      {
        type: 'input',
        name: 'projectName',
        message: 'Enter your project name:',
        default: 'my-boltstatic-site',
      },
      {
        type: 'list',
        name: 'theme',
        message: 'Select a theme:',
        choices: ['default', 'minimal', 'dark'],
        default: 'default',
      },
      {
        type: 'input',
        name: 'title',
        message: 'Enter your site title:',
        default: 'My BoltStatic Site',
      },
      {
        type: 'input',
        name: 'description',
        message: 'Enter your site description:',
        default: 'A blazing fast static site generated by BoltStatic.',
      },
      {
        type: 'input',
        name: 'baseURL',
        message: 'Enter your site base URL:',
        default: 'http://localhost:3000',
      },
    ];

    const answers = await inquirer.prompt(questions);

    const projectPath = path.join(process.cwd(), answers.projectName);

    if (fs.existsSync(projectPath)) {
      boltLogError('Directory already exists. Please choose a different project name.');
      process.exit(1);
    }

    fs.mkdirSync(projectPath);
    process.chdir(projectPath);

    // Initialize directories
    const dirs = [
      'bin',
      'src/core',
      'src/commands',
      'src/plugins',
      'src/templates',
      'src/components',
      'src/utils',
      'themes/default/layouts',
      'themes/default/partials',
      'themes/default/components',
      'themes/default/static',
      'content/posts',
      'content/pages',
      'static/css',
      'static/js',
      'static/images',
      'docs',
    ];

    dirs.forEach((dir) => {
      fs.mkdirSync(dir, { recursive: true });
    });

    // Create initial config.yaml
    const config = {
      title: answers.title,
      description: answers.description,
      baseURL: answers.baseURL,
      language: 'en',
      theme: answers.theme,
      plugins: ['seo'],
    };

    fs.writeFileSync('config.yaml', yaml.stringify(config));

    // Create package.json
    const packageJson = {
      name: answers.projectName,
      version: '0.1.0',
      description: config.description,
      main: 'bin/boltstatic.js',
      scripts: {
        build: 'node src/core/boltBuild.js',
        serve: 'node src/core/boltServe.js',
        start: 'npm run serve',
        test: 'jest',
        lint: 'eslint src/**/*.js',
        format: 'prettier --write src/**/*.js',
      },
      repository: {
        type: 'git',
        url: 'git@github.com:karandaid/boltstatic.git',
      },
      keywords: ['static-site-generator', 'nodejs', 'boltstatic', 'gohugo'],
      author: 'Your Name',
      license: 'MIT',
      bugs: {
        url: 'https://github.com/karandaid/boltstatic/issues',
      },
      homepage: 'https://github.com/karandaid/boltstatic#readme',
      dependencies: {
        handlebars: '^4.7.7',
        'markdown-it': '^13.0.1',
        yaml: '^2.1.3',
      },
      devDependencies: {
        jest: '^29.0.0',
        eslint: '^8.0.0',
        prettier: '^2.0.0',
        'browser-sync': '^2.27.10',
        webpack: '^5.0.0',
        'webpack-cli': '^4.0.0',
        inquirer: '^8.2.0',
        minimist: '^1.2.6',
        chalk: '^4.1.2',
        chokidar: '^3.5.3',
      },
    };

    fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));

    // Initialize README.md
    const readmeContent = `# ${answers.title}

A blazing fast static site generated by BoltStatic.

## Installation

\`\`\`bash
npm install -g boltstatic
\`\`\`

## Usage

\`\`\`bash
boltstatic serve
\`\`\`

Visit \`http://localhost:3000\` to view your site.

## Building the Site

\`\`\`bash
boltstatic build
\`\`\`

The generated site will be in the \`dist/\` directory.

## Configuration

Edit the \`config.yaml\` file to customize your site.

## License

This project is licensed under the MIT License.
`;

    fs.writeFileSync('README.md', readmeContent);

    // Create .gitignore
    const gitignoreContent = `node_modules
dist
.cache
.env
`;

    fs.writeFileSync('.gitignore', gitignoreContent);

    boltLogSuccess('Project initialized successfully!');
  } catch (error) {
    boltLogError('Failed to initialize project:', error);
  }
};

const boltBuild = () => {
  console.log('Building the BoltStatic site...');
  // Implementation to be added
};

const boltServe = () => {
  console.log('Serving the BoltStatic site...');
  // Implementation to be added
};

module.exports = {
  boltInitialize,
  boltBuild,
  boltServe,
};
